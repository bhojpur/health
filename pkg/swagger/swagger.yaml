openapi: 3.0.1
info:
  title: Health
  description: A model for online Healthcare services server.
  termsOfService: https://www.bhojpur-consulting.com/p/terms-of-service.html
  contact:
    email: product@bhojpur-consulting.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: /
- url: /
tags:
- name: practitioner
  description: All about healthcare practitioners of the co-operative.
- name: beneficiary
  description: All about heathcare beneficiaries of the co-operative
- name: scheduling
  description: Access to practitioners free scheduling microservice
- name: booking
  description: Access to consultation booking microservice
- name: members
  description: Access to member's profile and authentication
paths:
  /practitioner:
    put:
      tags:
      - practitioner
      summary: Update the practitioner information in the registries
      operationId: update_profile
      requestBody:
        description: Practitioner information to be updated in the registries
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Practitioner'
        required: true
      responses:
        "200":
          description: Success operation
          content: {}
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Practitioner not found
          content: {}
        "405":
          description: Validation exception
          content: {}
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.practitioner_controller
    post:
      tags:
      - practitioner
      summary: Register a new practitioner in the co-operative
      operationId: create_practitioner_profile
      requestBody:
        description: Practitioner's information that use for registration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Practitioner'
        required: true
      responses:
        "405":
          description: Invalid input
          content: {}
      security:
      - bhojpur_auth:
        - write:practs
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.practitioner_controller
    servers:
    - url: https://registration.health.bhojpur.net/v1
      description: Registration microservice server
    - url: http://registration.health.bhojpur.net/v1
  /practitioner/{publicId}/licences:
    get:
      tags:
      - practitioner
      summary: List all registered licences of a practitioner
      operationId: list_licences
      parameters:
      - name: access_token
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: publicId
        in: path
        description: Practitioner public id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content: {}
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.practitioner_controller
    put:
      tags:
      - practitioner
      summary: Add or update practioner's licences
      operationId: add_license
      parameters:
      - name: access_token
        in: header
        description: Authentication token
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: publicId
        in: path
        description: Practitioner's id in the registries
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: License records to be added
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/License'
      responses:
        "200":
          description: Successful operation
          content: {}
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.practitioner_controller
    servers:
    - url: https://registration.health.bhojpur.net/v1
  /practioner/{publicId}/specialities:
    put:
      tags:
      - practitioner
      summary: Update practioner's specialities
      operationId: update_specialty
      parameters:
      - name: access_token
        in: header
        description: Authentication token
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: publicId
        in: path
        description: Practitioner's public id in the registries
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Speciality information to be update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Speciality'
      responses:
        "200":
          description: Successful speciality update
          content: {}
      x-openapi-router-controller: swagger_server.controllers.practitioner_controller
    post:
      tags:
      - practitioner
      summary: Add practioner's specialities
      operationId: add_specialty
      parameters:
      - name: access_token
        in: header
        description: Authentication token
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: publicId
        in: path
        description: Practitioner's public id in the registries
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Speciality information to be update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Speciality'
      responses:
        "200":
          description: Successful speciality update
          content: {}
        "400":
          description: Invalid input
          content: {}
        "401":
          description: Unauthorized
          content: {}
      x-openapi-router-controller: swagger_server.controllers.practitioner_controller
    servers:
    - url: https://registration.health.bhojpur.net/v1
    x-codegen-request-body-name: body
  /practitioner/findByCriteria:
    get:
      tags:
      - practitioner
      summary: Finds practitioners by status
      description: Single status value shall be provided
      operationId: find_practtioners_by_criteria
      parameters:
      - name: criteria
        in: query
        description: Criteria values that need to be considered for filter
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: speciality-only
            enum:
            - speciality-only
            - location-only
            - mode-only
            - speciality-location
            - speciality-location-mode
            - none
      - name: speciality
        in: query
        description: practitioner speciality
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: location
        in: query
        description: pratitioner location
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: mode
        in: query
        description: "consultation mode: video or presential "
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Practitioner'
                x-content-type: application/xml
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Practitioner'
        "400":
          description: Invalid criteria value
          content: {}
      security:
      - api_key: []
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.practitioner_controller
    servers:
    - url: https://registration.health.bhojpur.net/v1
  /practitioner/findByAvailability:
    description: This operation will be available in future versions
    get:
      tags:
      - practitioner
      summary: Finds practitioner by availabality
      description: "For availability based search date and time parameters are required,\
        \ alongside speciality, location or mode"
      operationId: find_practitoners_by_date_time
      parameters:
      - name: date
        in: query
        description: Tags to filter by
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Practitioner'
                x-content-type: application/xml
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Practitioner'
        "400":
          description: Invalid tag value
          content: {}
      deprecated: true
      security:
      - bhojpur_auth:
        - write:practs
        - read:practs
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.practitioner_controller
  /practitioner/uploadLicenseCertificate:
    post:
      tags:
      - practitioner
      summary: Help practitioner registration operation to upload certificates
      operationId: upload_certificate
      parameters:
      - name: publicId
        in: cookie
        description: practitioner temporary public Id after login
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: cookie
        description: temporary authorization token after login
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Certificate copy
        content:
          application/octet-stream:
            schema:
              type: object
              format: base64
      responses:
        "200":
          description: Success operation
          content: {}
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.practitioner_controller
    servers:
    - url: https://registration.health.bhojpur.net/v1
    - url: http://registration.health.bhojpur.net/v1
  /beneficiary:
    put:
      tags:
      - beneficiary
      summary: Update beneficiary entity
      operationId: update_beneficiary_profile
      requestBody:
        description: Beneficiary information to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Beneficiary'
      responses:
        "200":
          description: Success operation
        "403":
          description: Invalid input
      security:
      - bhojpur_auth:
        - write:benefs
        - read:benefs
      - jwt_token:
        - access_token
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.beneficiary_controller
    post:
      tags:
      - beneficiary
      summary: Create a beneficiary entity in the registries
      operationId: create_beneficiary_profile
      requestBody:
        description: Beneficiary personal information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Beneficiary'
      responses:
        "200":
          description: Success operation
        "403":
          description: Invalid input
      security:
      - bhojpur_auth:
        - write:benefs
        - read:benefs
      - jwt_token:
        - access_token
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.beneficiary_controller
    servers:
    - url: https://registration.health.bhojpur.net/v1
    - url: http://registration.health.bhojpur.net/v1
  /booking/makeAppointment:
    post:
      tags:
      - booking
      summary: Make appointment
      operationId: make_appointment
      requestBody:
        description: Appointment for consultation
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Appointment'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Appointment'
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        "400":
          description: Invalid Order
          content: {}
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.booking_controller
    servers:
    - url: http://booking.health.bhojpur.net/v1
  /appointment/findByName:
    get:
      tags:
      - booking
      summary: "Returns appointments by entity role, name and status"
      description: Returns a map of status codes to quantities
      operationId: find_appointments_by_name
      parameters:
      - name: role
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - doctor
          - patient
      - name: name
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - open
          - delivered
          - cancelled
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
                x-content-type: application/json
      security:
      - api_key: []
      x-openapi-router-controller: swagger_server.controllers.booking_controller
  /appointment/{appointmentId}':
    get:
      tags:
      - booking
      summary: Find appointment by ID
      description: For valid response try integer IDs with value >= 1 and <= 10.         Other
        values will generated exceptions
      operationId: get_order_by_id
      parameters:
      - name: appointmentId
        in: path
        description: ID of an appointment that needs to be fetched
        required: true
        style: simple
        explode: false
        schema:
          maximum: 10
          minimum: 1
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Appointment'
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Order not found
          content: {}
      x-openapi-router-controller: swagger_server.controllers.booking_controller
    delete:
      tags:
      - booking
      summary: Delete appointment by ID
      description: For valid response try integer IDs with positive integer value.         Negative
        or non-integer values will generate API errors
      operationId: delete_order
      parameters:
      - name: appointmentId
        in: path
        description: ID of the appointment that needs to be deleted
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Order not found
          content: {}
      x-openapi-router-controller: swagger_server.controllers.booking_controller
  /members/createCredentials:
    post:
      tags:
      - members
      summary: Create a member's credentials to reference the profile
      operationId: create_credentials
      requestBody:
        description: Member information to create a credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        "200":
          description: Successful operation
          content: {}
        "400":
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.members_controller
  /members/login:
    post:
      tags:
      - members
      summary: Logs user into the system
      operationId: login_user
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              style: simple
              explode: false
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "400":
          description: Invalid username/password supplied
          content: {}
      x-openapi-router-controller: swagger_server.controllers.members_controller
  /members/logout:
    get:
      tags:
      - members
      summary: Logs out current logged in user session
      operationId: logout_user
      responses:
        default:
          description: successful operation
          content: {}
      x-openapi-router-controller: swagger_server.controllers.members_controller
  /members/{username}:
    get:
      tags:
      - members
      summary: Get user by user name
      operationId: get_user_by_name
      parameters:
      - name: username
        in: path
        description: 'The name that needs to be fetched. '
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Member'
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        "400":
          description: Invalid username supplied
          content: {}
        "404":
          description: User not found
          content: {}
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.members_controller
    put:
      tags:
      - members
      summary: Update user
      description: This can only be done by the logged in user.
      operationId: update_user
      parameters:
      - name: username
        in: path
        description: name that need to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Updated user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Member'
        required: true
      responses:
        "400":
          description: Invalid user supplied
          content: {}
        "404":
          description: User not found
          content: {}
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.members_controller
    delete:
      tags:
      - members
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: delete_user
      parameters:
      - name: username
        in: path
        description: The name that needs to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "400":
          description: Invalid username supplied
          content: {}
        "404":
          description: User not found
          content: {}
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.members_controller
    servers:
    - url: https://authentication.health.bhojpur.net/v1
  /members/profile/{publicId}/uploadImage:
    post:
      tags:
      - members
      summary: uploads profile image
      operationId: upload_profile_image
      parameters:
      - name: publicId
        in: path
        description: ID of pet to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/publicId_uploadImage_body'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
      - bhojpur_auth:
        - write:pets
        - read:pets
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.members_controller
  /scheduling/addSchedule:
    post:
      tags:
      - scheduling
      summary: Place availability schedule
      operationId: add_schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        "200":
          description: Success operation
          content: {}
      security:
      - bhojpur_auth:
        - write:schedules
        - read:schedules
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.scheduling_controller
    servers:
    - url: https://scheduling.health.bhojpur.net/v1
    - url: http://scheduling.health.bhojpur.net/v1
components:
  schemas:
    Appointment:
      required:
      - beneficiaryId
      - consultationDate
      - practitionerId
      - remarks
      - speciality
      - status
      type: object
      properties:
        id:
          type: integer
          format: int64
        practitionerId:
          type: integer
          format: int64
        speciality:
          type: string
        consultationDate:
          type: string
          format: date-time
        beneficiaryId:
          type: integer
          format: int64
        remarks:
          type: string
        status:
          type: string
          description: Appointment Status
          enum:
          - open
          - delivered
          - cancelled
        complete:
          type: boolean
          default: false
      example:
        speciality: speciality
        consultationDate: 2000-01-23T04:56:07.000+00:00
        id: 0
        complete: false
        practitionerId: 6
        remarks: remarks
        beneficiaryId: 1
        status: open
    Address:
      required:
      - city
      - country
      - number
      - postalCode
      - state
      - street
      type: object
      properties:
        id:
          type: integer
          format: int64
        street:
          type: string
        number:
          type: string
        postalCode:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
      example:
        number: number
        country: country
        city: city
        street: street
        postalCode: postalCode
        id: 5
    Speciality:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
          example: Nutritionist
        description:
          type: string
      example:
        description: description
        id: 6
        title: Nutritionist
    Member:
      required:
      - country
      - password
      - phone
      - role
      - username
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        password:
          type: string
          format: password
        phone:
          type: string
        country:
          type: string
        role:
          type: string
          enum:
          - doctor
          - beneficiary
        userStatus:
          type: string
          description: User Status
          enum:
          - pending
          - suspended
          - active
          - inactive
      example:
        country: country
        password: ""
        role: doctor
        userStatus: pending
        phone: phone
        id: 0
        email: email
        username: username
    License:
      required:
      - certificateUrl
      - code
      - endDate
      - issueDate
      - issuerCountry
      - issuerEntity
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
        issueDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        issuerEntity:
          type: string
        issuerCountry:
          type: string
        certificateUrl:
          type: string
        status:
          type: string
          description: License validation status
          enum:
          - validated
          - verifying
          - Invalid
      example:
        issuerEntity: issuerEntity
        code: code
        endDate: 2000-01-23
        issueerCountry: issueerCountry
        id: 1
        certificateUrl: certificateUrl
        issueDate: 2000-01-23
        status: validated
    Beneficiary:
      required:
      - address
      - birthDate
      - gender
      - name
      - phone
      - taxId
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Maria Furtado
        taxId:
          type: string
          description: Tax indentification number
        birthDate:
          type: string
          example: "{}"
        phone:
          type: string
          example: +91 20 300 400
        gender:
          type: string
          enum:
          - male
          - female
          - outro
        address:
          $ref: '#/components/schemas/Address'
    Practitioner:
      required:
      - addresses
      - birthDate
      - licences
      - name
      - phone
      - photoUrl
      - role
      - specialities
      - taxId
      type: object
      properties:
        id:
          type: integer
          format: int64
        specialities:
          type: array
          items:
            $ref: '#/components/schemas/Speciality'
        licences:
          type: array
          items:
            $ref: '#/components/schemas/License'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        name:
          type: string
          example: Shashi Bhushan Rai
        taxId:
          type: string
        birthDate:
          type: string
          example: "{}"
        phone:
          type: string
          example: +91 20 110 200
        role:
          type: string
          example: doctor
        photoUrl:
          type: string
      example:
        photoUrl: photoUrl
        addresses:
        - number: number
          country: country
          city: city
          street: street
          postalCode: postalCode
          id: 5
        - number: number
          country: country
          city: city
          street: street
          postalCode: postalCode
          id: 5
        role: doctor
        phone: +91 20 110 200
        taxId: taxId
        name: Shashi Bhushan Rai
        id: 0
        licences:
        - issuerEntity: issuerEntity
          code: code
          endDate: 2000-01-23
          issueerCountry: issueerCountry
          id: 1
          certificateUrl: certificateUrl
          issueDate: 2000-01-23
          status: validated
        - issuerEntity: issuerEntity
          code: code
          endDate: 2000-01-23
          issueerCountry: issueerCountry
          id: 1
          certificateUrl: certificateUrl
          issueDate: 2000-01-23
          status: validated
        birthDate: "{}"
        specialities:
        - description: description
          id: 6
          title: Nutritionist
        - description: description
          id: 6
          title: Nutritionist
    Schedule:
      required:
      - doctorId
      - month
      - weeks
      - year
      properties:
        doctorId:
          type: string
        year:
          type: integer
          example: 2021
        month:
          type: integer
        weeks:
          type: array
          items:
            $ref: '#/components/schemas/Schedule_weeks'
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      example:
        code: 0
        type: type
        message: message
    publicId_uploadImage_body:
      properties:
        additionalMetadata:
          type: string
          description: Additional data to pass to server
        file:
          type: string
          description: file to upload
          format: binary
    Schedule_weeks:
      type: array
      items:
        type: object
  
  securitySchemes:
    bhojpur_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://members.bhojpur.net/auth/dialog
          scopes:
            write:practs: modify practitioner's data in registry
            read:practs: read practitioners's data
            write:benefs: modify beneficiary's data in the registries
            read:benefs: read beneficiary's data in the registries
            write:schedules: modify schedules
            read:schedules: read schedules in the registries
      x-tokenInfoFunc: swagger_server.controllers.authorization_controller.check_bhojpur_auth
      x-scopeValidateFunc: swagger_server.controllers.authorization_controller.validate_scope_bhojpur_auth
    api_key:
      type: apiKey
      name: api_key
      in: header
      x-apikeyInfoFunc: swagger_server.controllers.authorization_controller.check_api_key
    jwt_token:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_jwt_token
